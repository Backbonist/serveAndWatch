#!/usr/bin/env node

/**
 * Module dependencies.
 */

var resolve = require('path').resolve
  , join = require('path').join
  , program = require('commander')
  , connect = require('connect')
  , url = require('url')
  , fs = require('fs')
  , _ = require('underscore');

// CLI

program
  .version('1.0.3')
  .usage('[options] [dir]')
  .option('-F, --format <fmt>', 'specify the log format string', 'dev')
  .option('-p, --port <port>', 'specify the port [3000]', Number, 3000)
  .option('-w, --watch', 'watch dir and reload clients on change')
  .option('-l, --less', 'compile your .less files on the fly as needed')
  .option('-H, --hidden', 'enable hidden file serving')
  .option('-P, --pushState', 'enable pushState on `index.html`')
  .option('-I, --no-icons', 'disable icons')
  .option('-L, --no-logs', 'disable request logging')
  .option('-D, --no-dirs', 'disable directory serving')
  .parse(process.argv);

// path
var path = resolve(program.args.shift() || '.');

// setup the server
var server = connect();

// ignore favicon
server.use(connect.favicon());

// logger
if (program.logs) server.use(connect.logger(program.format));

// watching a directory for changes
if (program.watch) server.use(require('watch-connect')(path, server, {verbose: true}));

// less
if (program.less) server.use(require('connect-less')({ src: path }));

// static files
server.use(connect.static(path, { hidden: program.hidden }));

// directory serving
if (program.dirs) {
    server.use(connect.directory(path, {
      hidden: program.hidden
    , icons: program.icons
  }));
}

if (program.pushState) {
  server.use(function(req, res) {
    fs.createReadStream( path + '/index.html').pipe(res);
  });
}

// start the server
server.listen(program.port, function(){
  console.log('\033[90mserving%s \033[36m%s\033[90m on port \033[96m%d\033[0m', program.watch ? ' and watching':'' ,path, server.address().port);
});
